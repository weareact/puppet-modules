# Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
classes:
  - wso2am

wso2::template_list:
  - repository/conf/datasources/am-datasources.xml
  - repository/conf/api-manager.xml
  - repository/conf/identity.xml
#  - repository/conf/security/cipher-text.properties
#  - repository/conf/security/cipher-tool.properties
#  - bin/ciphertool.sh
#  - password-tmp

#wso2::ports:
#  proxyPort:
#    http: 80
#    https: 443

# Uncomment the following in a clustered setup
#wso2::file_list:
#  - "repository/components/lib/%{hiera('wso2::datasources::mysql::connector_jar')}"

wso2::service_name: wso2am
wso2::hostname: am.dev.wso2.org
wso2::mgt_hostname: am.dev.wso2.org

wso2::apim_gateway:
  host: am.dev.wso2.org
  port: 9443
  api_endpoint_host: am.dev.wso2.org
  api_endpoint_port: 8280
  secure_api_endpoint_port: 8243
  api_token_revoke_endpoint_port: 8280
  secure_api_token_revoke_endpoint_port: 8243
  username: "%{hiera('wso2::super_admin::username')}"
  password: "%{hiera('wso2::super_admin::password')}"

wso2::apim_keymanager:
  host: am.dev.wso2.org
  port: 9443
  username: "%{hiera('wso2::super_admin::username')}"
  password: "%{hiera('wso2::super_admin::password')}"

wso2::apim_store:
  host: am.dev.wso2.org
  port: 9443

wso2::apim_publisher:
  host: am.dev.wso2.org
  port: 9443

#wso2::registry_mounts:
# wso2_config_db:
#   path: /_system/config
#   target_path: /_system/config/apim
#   read_only: false
#   registry_root: /
#   enable_cache: true
#
# wso2_gov_db:
#   path: /_system/governance
#   target_path: /_system/governance
#   read_only: false
#   registry_root: /
#   enable_cache: true

## Uncomment the hosts mappings for a clustered setup
#wso2::hosts_mapping:
#  apim_keymanager:
#    ip: 192.168.100.2
#    name: km.dev.wso2.org
#  apim_store:
#    ip: 192.168.100.3
#    name: store.dev.wso2.org
#  apim_publisher:
#    ip: 192.168.100.4
#    name: pub.dev.wso2.org
#  apim_gateway:
#    ip: 192.168.100.5
#    name: gw.dev.wso2.org
#  svn:
#    ip: 192.168.100.1
#    name: svn.gw.am.dev.wso2.org

## Uncomment the following for a clustered setup
#wso2::apim_gateway:
#  host: gw.dev.wso2.org
#  port: 9443
#  api_endpoint_host: gw.dev.wso2.org
#  api_endpoint_port: 8280
#  secure_api_endpoint_port: 8243
#  api_token_revoke_endpoint_port: 8280
#  secure_api_token_revoke_endpoint_port: 8243
#  username: "%{hiera('wso2::super_admin::username')}"
#  password: "%{hiera('wso2::super_admin::password')}"
#
#wso2::apim_keymanager:
#  host: km.dev.wso2.org
#  port: 9443
#
#wso2::apim_store:
#  host: store.dev.wso2.org
#  port: 9443
#
#wso2::apim_publisher:
#  host: pub.dev.wso2.org
#  port: 9443

## Uncomment the following to use MySQL data source in a clustered setup
#wso2::usermgt_datasource: wso2user_db

# Use H2 based wso2am_db in a stand-alone setup. In a clustered setup this should point to a MySQL data source
wso2::is_datasource: wso2am_db
wso2::am_datasource: wso2am_db

wso2::am_datasources:
  wso2am_db:
    name: WSO2AM_DB
    description: The datasource used for API Manager database
    driver_class_name: "%{hiera('wso2::datasources::h2::driver_class_name')}"
    url: jdbc:h2:repository/database/WSO2AM_DB;DB_CLOSE_ON_EXIT=FALSE
    username: "%{hiera('wso2::datasources::common::username')}"
    password: "%{hiera('wso2::datasources::common::password')}"
    jndi_config: jdbc/WSO2AM_DB
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::h2::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

## Uncomment the following wso2am_db MySQL data source and comment out the above wso2am_db h2 data source for a clustered setup
#  wso2am_db:
#    name: WSO2AM_DB
#    description: The datasource used for API Manager database
#    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
#    url: jdbc:mysql://192.168.100.1:3306/APIM_DB?autoReconnect=true
#    username: "%{hiera('wso2::datasources::mysql::username')}"
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#    jndi_config: jdbc/WSO2AM_DB
#    max_active: "%{hiera('wso2::datasources::common::max_active')}"
#    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
#    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
#    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
#    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
#    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

## Uncomment the following MySQL data sources for clustered setup
#wso2::master_datasources:
#  wso2_config_db:
#    name: WSO2_CONFIG_DB
#    description: The datasource used for config registry
#    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
#    url: jdbc:mysql://192.168.100.1:3306/APIM_DB?autoReconnect=true
#    username: "%{hiera('wso2::datasources::mysql::username')}"
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#    jndi_config: jdbc/WSO2_CONFIG_DB
#    max_active: "%{hiera('wso2::datasources::common::max_active')}"
#    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
#    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
#    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
#    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
#    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"
#
#  wso2_gov_db:
#    name: WSO2_GOV_DB
#    description: The datasource used for gov registry
#    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
#    url: jdbc:mysql://192.168.100.1:3306/WSO2_GOV_DB?autoReconnect=true
#    username: "%{hiera('wso2::datasources::mysql::username')}"
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#    jndi_config: jdbc/WSO2_GOV_DB
#    max_active: "%{hiera('wso2::datasources::common::max_active')}"
#    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
#    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
#    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
#    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
#    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"
#
#  wso2user_db:
#    name: WSO2USER_DB
#    description: The datasource is used for user mangement and userstore
#    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
#    url: jdbc:mysql://192.168.100.1:3306/WSO2_USER_DB?autoReconnect=true
#    username: "%{hiera('wso2::datasources::mysql::username')}"
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#    jndi_config: jdbc/WSO2USER_DB
#    max_active: "%{hiera('wso2::datasources::common::max_active')}"
#    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
#    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
#    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
#    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
#    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

# Secure vault configuration
#wso2::enable_secure_vault: true
#wso2::secure_vault_configs:
#  key_store_password:
#    secret_alias: Carbon.Security.KeyStore.Password
#    secret_alias_value: carbon.xml//Server/Security/KeyStore/Password,true
#    password: "%{hiera('wso2::key_stores::key_store::password')}"
#
#  key_store_key_password:
#    secret_alias: Carbon.Security.KeyStore.KeyPassword
#    secret_alias_value: carbon.xml//Server/Security/KeyStore/KeyPassword,true
#    password: "%{hiera('wso2::key_stores::key_store::key_password')}"
#
#  trust_store_password:
#    secret_alias: Carbon.Security.TrustStore.Password
#    secret_alias_value: carbon.xml//Server/Security/TrustStore/Password,true
#    password: "%{hiera('wso2::key_stores::trust_store::password')}"
#
#  user_manager_admin_password:
#    secret_alias: UserManager.AdminUser.Password
#    secret_alias_value: user-mgt.xml//UserManager/Realm/Configuration/AdminUser/Password,true
#    password: "%{hiera('wso2::super_admin::password')}"
#
#  wso2_carbon_db_password:
#    secret_alias: Datasources.WSO2_CARBON_DB.Configuration.Password
#    secret_alias_value: master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_CARBON_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::common::password')}"
#
#  registry_key_store_password:
#    secret_alias: Carbon.Security.RegistryKeyStore.Password
#    secret_alias_value: carbon.xml//Server/Security/RegistryKeyStore/Password,true
#    password: "%{hiera('wso2::key_stores::registry_key_store::password')}"
#
#  registry_key_store_key_password:
#    secret_alias: Carbon.Security.RegistryKeyStore.KeyPassword
#    secret_alias_value: carbon.xml//Server/Security/RegistryKeyStore/KeyPassword,true
#    password: "%{hiera('wso2::key_stores::registry_key_store::key_password')}"
#
#  user_trusted_RPStore_password:
#    secret_alias: Security.UserTrustedRPStore.Password
#    secret_alias_value: identity.xml//Server/Security/UserTrustedRPStore/Password
#    password: "%{hiera('wso2::key_stores::user_trusted_rp_store::password')}"
#
#  user_trusted_RPStore_key_password:
#    secret_alias: Security.UserTrustedRPStore.KeyPassword
#    secret_alias_value: identity.xml//Server/Security/UserTrustedRPStore/KeyPassword
#    password: "%{hiera('wso2::key_stores::user_trusted_rp_store::key_password')}"
#
#  wso2am_db_password:
#    secret_alias: Datasource.WSO2AM_DB.configuration.password
#    secret_alias_value: am-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2AM_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  wso2_config_db_password:
#    secret_alias: Datasources.WSO2_CONFIG_DB.Configuration.Password
#    secret_alias_value: master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_CONFIG_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  wso2_gov_db_password:
#    secret_alias: Datasources.WSO2_GOV_DB.Configuration.Password
#    secret_alias_value: master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_GOV_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  wso2user_db_password:
#    secret_alias: Datasources.WSO2USER_DB.Configuration.Password
#    secret_alias_value: master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2USER_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  auth_manager_password:
#    secret_alias: AuthManager.Password
#    secret_alias_value: api-manager.xml//APIManager/AuthManager/Password,true
#    password: "%{hiera('wso2::super_admin::password')}"
#
#  api_gateway_password:
#    secret_alias: APIGateway.Password
#    secret_alias_value: api-manager.xml//APIManager/APIGateway/Environments/Environment/Password,true
#    password: "%{hiera('wso2::super_admin::password')}"
#
#  api_key_validator_password:
#    secret_alias: APIKeyValidator.Password
#    secret_alias_value: api-manager.xml//APIManager/APIKeyValidator/Password,true
#    password: "%{hiera('wso2::super_admin::password')}"
#
#  xmpp_password:
#    secret_alias: MultifactorAuthentication.XMPPSettings.XMPPConfig.XMPPPassword
#    secret_alias_value: identity.xml//MultifactorAuthentication/XMPPSettings/XMPPConfig/XMPPPassword,true
#    password: wso2carbon
#
#  api_usage_tracking_bam_password:
#    secret_alias: APIUsageTracking.BAMPassword
#    secret_alias_value: api-manager.xml//APIManager/APIUsageTracking/BAMPassword,true
#    password: admin
#
#  axis2_https_listener_trust_store_password:
#    secret_alias: Axis2.Https.Listener.TrustStore.Password
#    secret_alias_value: axis2.xml//axisconfig/transportReceiver[@name='https']/parameter[@name='truststore']/TrustStore/Password,false
#    password: "%{hiera('wso2::key_stores::trust_store::password')}"
#
#  axis2_https_listener_key_store_password:
#    secret_alias: Axis2.Https.Listener.KeyStore.Password
#    secret_alias_value: axis2.xml//axisconfig/transportReceiver[@name='https']/parameter[@name='keystore']/KeyStore/Password,false
#    password: "%{hiera('wso2::key_stores::key_store::password')}"
#
#  axis2_https_listener_key_store_key_password:
#    secret_alias: Axis2.Https.Listener.KeyStore.KeyPassword
#    secret_alias_value: axis2.xml//axisconfig/transportReceiver[@name='https']/parameter[@name='keystore']/KeyStore/KeyPassword,false
#    password: "%{hiera('wso2::key_stores::key_store::key_password')}"
#
#  axis2_https_sender_trust_store_password:
#    secret_alias: Axis2.Https.Sender.TrustStore.Password
#    secret_alias_value: axis2.xml//axisconfig/transportSender[@name='https']/parameter[@name='truststore']/TrustStore/Password,false
#    password: "%{hiera('wso2::key_stores::trust_store::password')}"
#
#  axis2_https_sender_key_store_password:
#    secret_alias: Axis2.Https.Sender.KeyStore.Password
#    secret_alias_value: axis2.xml//axisconfig/transportSender[@name='https']/parameter[@name='keystore']/KeyStore/Password,false
#    password: "%{hiera('wso2::key_stores::key_store::password')}"
#
#  axis2_https_sender_key_store_key_password:
#    secret_alias: Axis2.Https.Sender.KeyStore.KeyPassword
#    secret_alias_value: axis2.xml//axisconfig/transportSender[@name='https']/parameter[@name='keystore']/KeyStore/KeyPassword,false
#    password: "%{hiera('wso2::key_stores::key_store::key_password')}"
#
#  authenticator_config_trust_store_password:
#    secret_alias: AuthenticatorConfig.TrustStore.Password
#    secret_alias_value: application-authentication.xml//ApplicationAuthentication/AuthenticatorConfigs/AuthenticatorConfig[@name='OpenIDAuthenticator']/Parameter[@name='TrustStorePassword'],true
#    password: "%{hiera('wso2::key_stores::trust_store::password')}"
#
#  thrift_based_entitlement_config_key_store_password:
#    secret_alias: EntitlementSettings.ThirftBasedEntitlementConfig.KeyStore.Password
#    secret_alias_value: identity.xml//Server/EntitlementSettings/ThirftBasedEntitlementConfig/KeyStore/Password,true
#    password: "%{hiera('wso2::key_stores::key_store::password')}"
#
##Use below advanced secure vault configurations if they are used in corresponding files
#  wso2am_stats_db_password:
#    secret_alias: Datasource.WSO2AM_STATS_DB.configuration.password
#    secret_alias_value: master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2AM_STATS_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::common::password')}"
#
#  api_key_manager_password:
#    secret_alias: APIKeyManager.Password
#    secret_alias_value: api-manager.xml//APIManager/APIKeyManager/Password,true
#    password: admin
#
#  user_store_manager_connection_password:
#    secret_alias: UserStoreManager.Property.ConnectionPassword
#    secret_alias_value: user-mgt.xml//UserManager/Realm/UserStoreManager/Property[@name='ConnectionPassword'],true
#    password: admin
#
#  user_store_manager_password:
#    secret_alias: UserStoreManager.Property.password
#    secret_alias_value: user-mgt.xml//UserManager/Realm/UserStoreManager/Property[@name='password'],true
#    password: admin
#
#  identity_system_store_pass:
#    secret_alias: Identity.System.StorePass
#    secret_alias_value: identity.xml//Server/Identity/System/StorePass
#    password: wso2carbon
#
#  bpelepr_password:
#    secret_alias:  BPELEPR.Password
#    secret_alias_value:securedinvoke.epr//EndpointReference/Metadata/transport/authorization-password,false
#    password: admin
#
#  axis2_mailto_parameter_password:
#    secret_alias: Axis2.Mailto.Parameter.Password
#    secret_alias_value: axis2.xml//axisconfig/transportSender[@name='mailto']/parameter[@name='mail.smtp.password'],false
#    password: wso2carbon
#
#  remote_message_broker_password:
#    secret_alias: eventBrokerConfig.eventBroker.deliveryManager.remoteMessageBroker.password
#    secret_alias_value: event-broker.xml//eventBrokerConfig/eventBroker/deliveryManager/remoteMessageBroker/password,false
#    password: admin
